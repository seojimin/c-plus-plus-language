Jimin Seo 145803169 
jseo22@myseneca.ca

1.	Does the Hero class need to know about the existence of the SuperHero class? (Hint: do a search in Hero.cpp, does the word “SuperHero” appear anywhere?)
the Parent class does not need to know the existence of a child class. 
2.	Does the SuperHero class need to know about the existence of the Hero class? (Hint: do a search in SuperHero.cpp, does the word “Hero” appear anywhere?)
Yes. Child class should know the parent class.
3.	The program prints out “Ancient Battle!” when 2 Heroes fight. It prints out “Super Fight!” when 2 SuperHeroes fight. When you tried to make a Hero fight a SuperHero, what did it print out?
        Ancient Battle!
4.	True or False: are the following definitions for main valid? 
int main() {
  Hero("Achilles", 20, 6) * Hero("Hector", 30, 5);
}
True
how about this?

int main() {
 (Hero("Achilles", 20, 6) * Hero("Hector", 30, 5)) 
                          *
 (Hero("Atalanta", 10, 3) * Hero("Hippolyta", 10, 2));
}
True

quiz reflect
1 Check all that apply. Inheritance is

- transitive



2 Check all that apply. Protected status can and should be used with

-member functions



3  What is the output of the following program:

#include <iostream>

using namespace std;

class Base {

int noOfStudents;

public:

Base() { cout << “A”; }

~Base() { cout << “B”; }

};

class Derived : public Base {

public:

Derived() { cout << “C”; }

~Derived() { cout << “D”; }

};

int main() {

Base a;

Derived b;

}

_Answer: ACBD_______________________________________________

4 Rewrite the syntax in question 3 to pass the number of students from main to the base class and

store it in the data member (noOfStudents). Initialize this number in main() to 64 in each instantiation.

You may write your answer directly on the code listed above or just rewrite the statements that need to

be changed below.



Base(int val): noOfstudent(val){...} 

Base a(64);



Derived(int val): Base(val){ ...}

Derived b(64);



5 Write the syntax for accessing a member function named display() for class Base, which has

been shadowed by a member function of the same name of class Derived.

________Deriver::display(std::ostream&os) const;_____________

